@model Product


@{
    ViewData["Title"] = "ProductDetails";
    List<ProductImage> Images = (List<ProductImage>)ViewBag.ProductImages;
}

<head>
    <link href="/css/productDetails.css" rel="stylesheet" />
    <style>
        .user-img {
            margin: 0.5em;
            width: 30px;
            height: 30px;

        }

        .comments {
            background-color: #f7f7f7;
            height: 400px;
            overflow-y: scroll;
            overflow-x: hidden;
            border-radius: 10px;
        }
        .title {
            width: 100%;
            text-align: center;
            display: flex;
            justify-content: center;
            margin: 1em 0px;
            letter-spacing: 0.3em;
        }
    </style>
</head>

<main>
    <div class="row">
        <h1 class="title">PRODUCT DETAILS</h1>
        <div class="card-wrapper">
            <div class="card">
                <!-- card left -->
                <div class="product-imgs">

                    <div class="img-display">
                      <div class="img-showcase">
                        @{
                          string encodedDefaultImage = Convert.ToBase64String(Model.DefaultImage);
                          string defaultImage = string.Format("data:image/gif;base64,{0}",encodedDefaultImage);

                          @if (Model.Quantity == 0) {
                            @*<div class="no-stock">
                              <p>Out of stock</p>
                            </div>*@
                          }
                          <img class="product-pic" src="@defaultImage" alt="Product Picture" />
                        }
                        @foreach (var image in Images) {
                          string encoded = Convert.ToBase64String(image.Photo);
                          string photo = string.Format("data:image/gif;base64,{0}",encoded);

                          <img class="product-pic" src="@photo" alt="Alternate Text" />
                        }
                      </div>
                    </div>
                    @{var numId = 1; }
                    <div class="img-select">

                        <div class="img-item">


                            <a href="#" data-id="@numId">
                                <img class="product-pic" src="@defaultImage" alt="Alternate Text" />
                            </a>


                        </div>

                        @foreach (var image in Images) {
                            string encoded = Convert.ToBase64String(image.Photo);
                            string photo = string.Format("data:image/gif;base64,{0}", encoded);
                            ++numId;

                            <div class="img-item">


                                <a href="#" data-id="@numId">
                                    <img class="product-pic" src="@photo" alt="product image" />
                                </a>


                            </div>

                        }
                    </div>
                </div>
                <!-- card right -->
                <div class="product-content">
                    <h4 class="product-title">Name: @Model.Name</h4>
                    <div class="product-rating m-2">
                        @for (int i = 0; i < ViewBag.ProductReviewsAverage; i++) {
                            <i class="fas fa-star"></i>
                        }
                        @for (int i = ViewBag.ProductReviewsAverage; i < 5; i++) {
                            <i class="fas fa-star" style="color:#CCC"></i>
                        }


                        <span>@ViewBag.ProductReviewsAverage (@ViewBag.productRevCount ratings)</span>
                    </div>


                    <div class="product-detail">
                        <h2>about this product: </h2>
                        <p>@Model.Details</p>
                        <ul>
                            <li>Brand: <span>@Model.Brand</span></li>
                            @if (Model.Quantity == 0) {
                                <li>Available: <span>Out of stock</span></li>
                            } else {
                                <li>Available: <span>In stock</span></li>
                            }
                            <li>Quantity: <span> @Model.Quantity</span></li>
                            <li>Category:<span> @Model.Category.Name </span></li>
                            <li>Delivery: <span>Within 3 days</span></li>
                        </ul>
                    </div>
                    <div class="product-price">
                        @if (Model.Sale == 0) {
                            <p class="price">Price: <span> @Model.Price EUR</span></p>
                        } else {

                          
                                var salePrice = (Model.Price - (Model.Price * (Model.Sale * (decimal)0.01)));
                                
                           

                            <p class="price" style="text-decoration: line-through; color:#f75e82">Price:<span> @Model.Price EUR</span></p>
                            <p class="price">Price: <span> @salePrice EUR</span></p>
                        }

                    </div>

                    <div class="purchase-info">
                        <button type="button" class="btn" onclick="addToCart('@Model.Id')"> Add to Cart <i class="fas fa-shopping-cart"></i></button>

                    </div>

                </div>
            </div>
            </div>



        </div>
       
        <div class="container mt-5 comments">
            <h1 style="font-family:Pristina; width:100%; margin:0.5em;">Comment Section</h1>
            <div class="row d-flex justify-content-center">
                <div class="col-md-6">
                    @foreach (var reviewComment in ViewBag.ProductReviewsComments) {
                        <div class="card p-3 mb-2 d-flex" style=" box-shadow: 5px 6px 6px 2px #e9ecef; border-radius: 4px">

                            <div class="d-flex justify-content-between align-items-center m-2">


                                <div class="user d-flex flex-row align-items-center">
                                    <img src="https://thumbs.dreamstime.com/b/user-icon-glyph-gray-background-106603565.jpg" width="30" class="user-img rounded-circle">
                                    <span><small class="font-weight-bold text-primary">@reviewComment.Name @reviewComment.Surname (<i class="fas fa-star"></i> @reviewComment.RatedNumber)</small> <small class="font-weight-bold">@reviewComment.Comment</small></span>
                                </div>

                            </div>
                           
                        </div>
                    }
                    </div>
            </div>
        </div>


    </div>

    <script>
        const imgs = document.querySelectorAll('.img-select a');
        const imgBtns = [...imgs];
        let imgId = 1;

        imgBtns.forEach((imgItem) => {
            imgItem.addEventListener('click', (event) => {
                event.preventDefault();
                imgId = imgItem.dataset.id;
                slideImage();
            });
        });

        function slideImage() {
            const displayWidth = document.querySelector('.img-showcase img:first-child').clientWidth;

            document.querySelector('.img-showcase').style.transform = `translateX(${- (imgId - 1) * displayWidth}px)`;
        }

        window.addEventListener('resize', slideImage);

        function addToCart(productId) {
             $.ajax({
                type: "POST",
                url: "@Url.Action("AddToCart", "ShoppingCart", new {area ="User"})",
                data: { productId: productId},
                dataType: "text",
                success: function (msg) {
                    if (msg === "true") {
                        alert("Product successfully added to cart.")
                    } else if (msg === "notFound") {
                        alert("Cannot find product")
                    } else if (msg === 'login') {
                        window.location.href = '/Identity/Account/Login'
                    } else if (msg === 'max') {
                        alert('Cannot add any more items to the cart, you have reached the maximum quantity');
                    } else if (msg === 'outOfStock') {
                        alert('There are no items in stock');
                    }
                },
                error: function (req, status, error) {
                    console.log(msg);
                }
            });
        }
    </script>





</main>

